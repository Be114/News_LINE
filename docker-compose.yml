version: '3.8'

services:
  news-line:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Future: Add database and Redis for Phase 2
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: newsline
  #     POSTGRES_USER: newsline
  #     POSTGRES_PASSWORD: password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped

  # redis:
  #   image: redis:7-alpine
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped

# volumes:
#   postgres_data:
#   redis_data: